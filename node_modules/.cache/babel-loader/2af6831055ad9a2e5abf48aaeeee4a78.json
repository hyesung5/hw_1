{"ast":null,"code":"var _jsxFileName = \"/Users/ganghyeseong/Desktop/test/hw1/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport List from './components/List';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 1;\n    this.state = {\n      todos: []\n    };\n\n    this.handleInsert = (e, i) => {\n      this.setState({\n        todos: this.state.todos.concat({\n          user_id: e,\n          password: i,\n          id: this.id,\n          done: false\n        })\n      });\n      this.id++;\n      this.handleBack(this.state.todos);\n    };\n\n    this.handleUpdate = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            return { ...todo,\n              done: !todo.done\n            };\n          } else {\n            return { ...todo,\n              done: false\n            };\n          }\n        })\n      });\n    };\n\n    this.handleUpdate = (id, data) => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.map(info => id === info.id ? { ...info,\n          ...data\n        } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\n        : info // 기존의 값을 그대로 유지\n        )\n      });\n    };\n\n    this.handleBack = e => {\n      const {\n        new_state\n      } = this.state;\n      this.setState({\n        todos: new_state.map(todo => todo.done === true ? { ...todo,\n          done: false\n        } : todo)\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onInsert: this.handleInsert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      todos: this.state.todos,\n      onUpdate: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ganghyeseong/Desktop/test/hw1/src/App.js"],"names":["React","Component","Form","List","App","id","state","todos","handleInsert","e","i","setState","concat","user_id","password","done","handleBack","handleUpdate","map","todo","data","information","info","new_state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC5BI,EAD4B,GACzB,CADyB;AAAA,SAE5BC,KAF4B,GAEtB;AACJC,MAAAA,KAAK,EAAC;AADF,KAFsB;;AAAA,SAM5BC,YAN4B,GAMf,CAACC,CAAD,EAAIC,CAAJ,KAAQ;AAEnB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,CAAwB;AAC7BC,UAAAA,OAAO,EAAEJ,CADoB;AAE7BK,UAAAA,QAAQ,EAAEJ,CAFmB;AAG7BL,UAAAA,EAAE,EAAE,KAAKA,EAHoB;AAI7BU,UAAAA,IAAI,EAAE;AAJuB,SAAxB;AADK,OAAd;AASA,WAAKV,EAAL;AACA,WAAKW,UAAL,CAAgB,KAAKV,KAAL,CAAWC,KAA3B;AAED,KApB2B;;AAAA,SAsB5BU,YAtB4B,GAsBdZ,EAAD,IAAM;AAEjB,WAAKM,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAsBC,IAAD,IAAQ;AAClC,cAAGA,IAAI,CAACd,EAAL,KAAYA,EAAf,EAAkB;AAEhB,mBAAM,EACJ,GAAGc,IADC;AAEJJ,cAAAA,IAAI,EAAC,CAACI,IAAI,CAACJ;AAFP,aAAN;AAID,WAND,MAMM;AACJ,mBAAM,EACJ,GAAGI,IADC;AAEJJ,cAAAA,IAAI,EAAE;AAFF,aAAN;AAID;AAEF,SAdM;AADK,OAAd;AAkBD,KA1C2B;;AAAA,SA6C5BE,YA7C4B,GA6Cb,CAACZ,EAAD,EAAKe,IAAL,KAAc;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKf,KAA7B;AACA,WAAKK,QAAL,CAAc;AACZU,QAAAA,WAAW,EAAEA,WAAW,CAACH,GAAZ,CACXI,IAAI,IAAIjB,EAAE,KAAKiB,IAAI,CAACjB,EAAZ,GACJ,EAAE,GAAGiB,IAAL;AAAW,aAAGF;AAAd,SADI,CACiB;AADjB,UAEJE,IAHO,CAGF;AAHE;AADD,OAAd;AAOD,KAtD2B;;AAAA,SAuD5BN,UAvD4B,GAuDfP,CAAD,IAAK;AAEf,YAAM;AAAGc,QAAAA;AAAH,UAAgB,KAAKjB,KAA3B;AAEA,WAAKK,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAACgB,SAAS,CAACL,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACJ,IAAL,KAAc,IAAd,GAAqB,EAAC,GAAGI,IAAJ;AAAUJ,UAAAA,IAAI,EAAC;AAAf,SAArB,GAA6CI,IAAnE;AADM,OAAd;AAQD,KAnE2B;AAAA;;AAoE1BK,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKU,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAUH;;AA/EyB;;AAmF5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport List from './components/List';\n\nclass App extends Component {\nid=1;\nstate={\n  todos:[],\n};\n\nhandleInsert=(e, i)=>{\n  \n  this.setState({\n    todos: this.state.todos.concat({\n      user_id: e,\n      password: i,\n      id: this.id,\n      done: false,\n    }),\n    \n  });\n  this.id++;\n  this.handleBack(this.state.todos);\n  \n};\n\nhandleUpdate=(id)=>{\n\n  this.setState({\n    todos: this.state.todos.map((todo)=>{\n      if(todo.id === id){\n       \n        return{\n          ...todo,\n          done:!todo.done,\n        }\n      }else {\n        return{\n          ...todo,\n          done: false,\n        }\n      }\n      \n    })\n  });\n\n};\n\n\nhandleUpdate = (id, data) => {\n  const { information } = this.state;\n  this.setState({\n    information: information.map(\n      info => id === info.id\n        ? { ...info, ...data } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\n        : info // 기존의 값을 그대로 유지\n    )\n  })\n}\nhandleBack= (e)=>{\n\n  const {  new_state} = this.state;\n\n  this.setState({\n    todos:new_state.map(todo => todo.done === true ? {...todo, done:false} : todo\n       \n\n    )\n  })\n\n\n};\n  render(){\n      return(\n        <div className='App'>\n          <Form onInsert={this.handleInsert}\n          />\n          <List \n            todos={this.state.todos}\n            onUpdate={this.handleUpdate}\n          />\n        </div>\n      )\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}